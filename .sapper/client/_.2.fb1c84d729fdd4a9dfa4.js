webpackJsonp([2],{

/***/ 13:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__ = __webpack_require__(7);
/* routes/_components/GuideContents.html generated by Svelte v1.49.0 */


function data() {
	return {
		contents: []
	}
};

function oncreate() {
	const onhashchange = () => {
		this.store.set({ activeGuideSection: window.location.hash.slice( 1 ) });
	};

	window.addEventListener( 'hashchange', onhashchange, false );
	this.on( 'destroy', () => {
		window.removeEventListener( 'hashchange', onhashchange, false );
	});

	onhashchange();
};

function encapsulateStyles(node) {
	Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["C" /* setAttribute */])(node, "svelte-3051345958", "");
}

function create_main_fragment(state, component) {
	var ul;

	var $guide_contents = state.$guide_contents;

	var each_blocks = [];

	for (var i = 0; i < $guide_contents.length; i += 1) {
		each_blocks[i] = create_each_block(state, $guide_contents, $guide_contents[i], i, component);
	}

	return {
		c: function create() {
			ul = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("ul");

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}
			this.h();
		},

		l: function claim(nodes) {
			ul = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(nodes, "UL", { class: true }, false);
			var ul_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(ul);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			this.h();
		},

		h: function hydrate() {
			encapsulateStyles(ul);
			ul.className = "guide-toc";
		},

		m: function mount(target, anchor) {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["t" /* insertNode */])(ul, target, anchor);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}
		},

		p: function update(changed, state) {
			var $guide_contents = state.$guide_contents;

			if (changed.$guide_contents || changed.$activeGuideSection) {
				for (var i = 0; i < $guide_contents.length; i += 1) {
					if (each_blocks[i]) {
						each_blocks[i].p(changed, state, $guide_contents, $guide_contents[i], i);
					} else {
						each_blocks[i] = create_each_block(state, $guide_contents, $guide_contents[i], i, component);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].u();
					each_blocks[i].d();
				}
				each_blocks.length = $guide_contents.length;
			}
		},

		u: function unmount() {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */])(ul);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].u();
			}
		},

		d: function destroy() {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["m" /* destroyEach */])(each_blocks);
		}
	};
}

// (2:1) {{#each $guide_contents as section}}
function create_each_block(state, $guide_contents, section, section_index, component) {
	var li, a, text_value = section.metadata.title, text, a_class_value, a_href_value, text_1;

	var subsections = section.subsections;

	var each_blocks = [];

	for (var i = 0; i < subsections.length; i += 1) {
		each_blocks[i] = create_each_block_1(state, $guide_contents, section, section_index, subsections, subsections[i], i, component);
	}

	return {
		c: function create() {
			li = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("li");
			a = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("a");
			text = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])(text_value);
			text_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("\n\t\t\t");

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}
			this.h();
		},

		l: function claim(nodes) {
			li = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(nodes, "LI", {}, false);
			var li_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(li);

			a = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(li_nodes, "A", { class: true, href: true }, false);
			var a_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(a);

			text = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(a_nodes, text_value);
			a_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			text_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(li_nodes, "\n\t\t\t");

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(li_nodes);
			}

			li_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			this.h();
		},

		h: function hydrate() {
			encapsulateStyles(li);
			encapsulateStyles(a);
			a.className = a_class_value = "section " + (section.slug === state.$activeGuideSection ? "active": "");
			a.href = a_href_value = "/guide#" + section.slug;
		},

		m: function mount(target, anchor) {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["t" /* insertNode */])(li, target, anchor);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(a, li);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text, a);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_1, li);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(li, null);
			}
		},

		p: function update(changed, state, $guide_contents, section, section_index) {
			if ((changed.$guide_contents) && text_value !== (text_value = section.metadata.title)) {
				text.data = text_value;
			}

			if ((changed.$guide_contents || changed.$activeGuideSection) && a_class_value !== (a_class_value = "section " + (section.slug === state.$activeGuideSection ? "active": ""))) {
				a.className = a_class_value;
			}

			if ((changed.$guide_contents) && a_href_value !== (a_href_value = "/guide#" + section.slug)) {
				a.href = a_href_value;
			}

			var subsections = section.subsections;

			if (changed.$guide_contents || changed.$activeGuideSection) {
				for (var i = 0; i < subsections.length; i += 1) {
					if (each_blocks[i]) {
						each_blocks[i].p(changed, state, $guide_contents, section, section_index, subsections, subsections[i], i);
					} else {
						each_blocks[i] = create_each_block_1(state, $guide_contents, section, section_index, subsections, subsections[i], i, component);
						each_blocks[i].c();
						each_blocks[i].m(li, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].u();
					each_blocks[i].d();
				}
				each_blocks.length = subsections.length;
			}
		},

		u: function unmount() {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */])(li);

			for (var i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].u();
			}
		},

		d: function destroy() {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["m" /* destroyEach */])(each_blocks);
		}
	};
}

// (5:3) {{#each section.subsections as subsection}}
function create_each_block_1(state, $guide_contents, section, section_index, subsections, subsection, subsection_index, component) {
	var a, text_value = subsection.title, text, a_class_value, a_href_value;

	return {
		c: function create() {
			a = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("a");
			text = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])(text_value);
			this.h();
		},

		l: function claim(nodes) {
			a = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(nodes, "A", { class: true, href: true }, false);
			var a_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(a);

			text = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(a_nodes, text_value);
			a_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			this.h();
		},

		h: function hydrate() {
			encapsulateStyles(a);
			a.className = a_class_value = "subsection " + (subsection.slug === state.$activeGuideSection ? "active": "");
			a.href = a_href_value = "/guide#" + subsection.slug;
		},

		m: function mount(target, anchor) {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["t" /* insertNode */])(a, target, anchor);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text, a);
		},

		p: function update(changed, state, $guide_contents, section, section_index, subsections, subsection, subsection_index) {
			if ((changed.$guide_contents) && text_value !== (text_value = subsection.title)) {
				text.data = text_value;
			}

			if ((changed.$guide_contents || changed.$activeGuideSection) && a_class_value !== (a_class_value = "subsection " + (subsection.slug === state.$activeGuideSection ? "active": ""))) {
				a.className = a_class_value;
			}

			if ((changed.$guide_contents) && a_href_value !== (a_href_value = "/guide#" + subsection.slug)) {
				a.href = a_href_value;
			}
		},

		u: function unmount() {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */])(a);
		},

		d: __WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["u" /* noop */]
	};
}

function Index(options) {
	Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["s" /* init */])(this, options);
	this._state = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["c" /* assign */])(this.store._init(["guide_contents","activeGuideSection"]), data(), options.data);
	this.store._add(this, ["guide_contents","activeGuideSection"]);

	this._handlers.destroy = [__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["y" /* removeFromStore */]];

	var _oncreate = oncreate.bind(this);

	if (!options.root) {
		this._oncreate = [_oncreate];
	} else {
	 	this.root._oncreate.push(_oncreate);
	 }

	this._fragment = create_main_fragment(this._state, this);

	if (options.target) {
		var nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
		this._fragment.m(options.target, options.anchor || null);

		Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["e" /* callAll */])(this._oncreate);
	}
}

Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["c" /* assign */])(Index.prototype, __WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["w" /* proto */]);
/* harmony default export */ __webpack_exports__["a"] = (Index);
__webpack_require__(16);


/***/ }),

/***/ 14:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Nav_html__ = __webpack_require__(15);
/* routes/_components/Layout.html generated by Svelte v1.49.0 */





function encapsulateStyles(node) {
	Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["C" /* setAttribute */])(node, "svelte-428658705", "");
}

function create_main_fragment(state, component) {
	var text, div, slot_content_default = component._slotted.default;

	var nav = new __WEBPACK_IMPORTED_MODULE_1__Nav_html__["a" /* default */]({
		root: component.root,
		data: { page: state.page }
	});

	return {
		c: function create() {
			nav._fragment.c();
			text = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("\n\n");
			div = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("div");
			this.h();
		},

		l: function claim(nodes) {
			nav._fragment.l(nodes);
			text = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(nodes, "\n\n");

			div = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(nodes, "DIV", {}, false);
			var div_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(div);

			div_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			this.h();
		},

		h: function hydrate() {
			encapsulateStyles(div);
		},

		m: function mount(target, anchor) {
			nav._mount(target, anchor);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["t" /* insertNode */])(text, target, anchor);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["t" /* insertNode */])(div, target, anchor);

			if (slot_content_default) {
				Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(slot_content_default, div);
			}
		},

		p: function update(changed, state) {
			var nav_changes = {};
			if (changed.page) nav_changes.page = state.page;
			nav._set(nav_changes);
		},

		u: function unmount() {
			nav._unmount();
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */])(text);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */])(div);

			if (slot_content_default) {
				Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["x" /* reinsertChildren */])(div, slot_content_default);
			}
		},

		d: function destroy() {
			nav.destroy(false);
		}
	};
}

function Index(options) {
	Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["s" /* init */])(this, options);
	this._state = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["c" /* assign */])({}, options.data);

	this._slotted = options.slots || {};

	if (!options.root) {
		this._oncreate = [];
		this._beforecreate = [];
		this._aftercreate = [];
	}

	this.slots = {};

	this._fragment = create_main_fragment(this._state, this);

	if (options.target) {
		var nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
		this._fragment.m(options.target, options.anchor || null);

		this._lock = true;
		Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["e" /* callAll */])(this._beforecreate);
		Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["e" /* callAll */])(this._oncreate);
		Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["e" /* callAll */])(this._aftercreate);
		this._lock = false;
	}
}

Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["c" /* assign */])(Index.prototype, __WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["w" /* proto */]);
/* harmony default export */ __webpack_exports__["a"] = (Index);
__webpack_require__(21);


/***/ }),

/***/ 15:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__GuideContents_html__ = __webpack_require__(13);
/* routes/_components/Nav.html generated by Svelte v1.49.0 */



function data() {
	return {
		open: false,
		route: '',
		active: null
	};
};

var methods = {
	toggleOpen () {
		const open = this.get( 'open' );

		// if the menu is closing, scroll back to the top *after* it
		// shuts. otherwise, scroll back to the top immediately
		// (just in case the user reopened before it happened).
		// The reason we don't just do it when the menu opens is
		// that the scrollbar visibly flashes
		if ( open ) {
			setTimeout( () => {
				if ( !this.get( 'open' ) ) {
					this.refs.nav.scrollTop = 0;
				}
			}, 350 );
		} else {
			this.refs.nav.scrollTop = 0;
		}

		this.set({ open: !open });
	}
};

function encapsulateStyles(node) {
	Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["C" /* setAttribute */])(node, "svelte-2829050598", "");
}

function create_main_fragment(state, component) {
	var div, div_class_value, text, div_1, span, text_1_value = state.open ? 'Close' : 'Menu', text_1, text_2, a, text_3, text_5, nav, ul, li, a_1, text_6, a_1_class_value, li_1, a_2, text_7, a_2_class_value, li_2, a_3, text_8, a_3_class_value, li_3, a_4, text_9, li_4, a_5, text_10, text_11, div_2, nav_class_value;

	function click_handler(event) {
		component.set({ open: false });
	}

	function click_handler_1(event) {
		component.toggleOpen();
	}

	var guidecontents = new __WEBPACK_IMPORTED_MODULE_1__GuideContents_html__["a" /* default */]({
		root: component.root
	});

	function click_handler_2(event) {
		component.set({ open: false });
	}

	return {
		c: function create() {
			div = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("div");
			text = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("\n\n");
			div_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("div");
			span = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("span");
			text_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])(text_1_value);
			text_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("\n\t");
			a = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("a");
			text_3 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("Svelte");
			text_5 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("\n\n");
			nav = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("nav");
			ul = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("ul");
			li = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("li");
			a_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("a");
			text_6 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("Guide");
			li_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("li");
			a_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("a");
			text_7 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("REPL");
			li_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("li");
			a_3 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("a");
			text_8 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("Blog");
			li_3 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("li");
			a_4 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("a");
			text_9 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("Chat");
			li_4 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("li");
			a_5 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("a");
			text_10 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("GitHub");
			text_11 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("\n\n\t");
			div_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("div");
			guidecontents._fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			div = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(nodes, "DIV", { class: true }, false);
			var div_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(div);

			div_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			text = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(nodes, "\n\n");

			div_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(nodes, "DIV", { class: true }, false);
			var div_1_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(div_1);

			span = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(div_1_nodes, "SPAN", { class: true }, false);
			var span_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(span);

			text_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(span_nodes, text_1_value);
			span_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			text_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(div_1_nodes, "\n\t");

			a = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(div_1_nodes, "A", { href: true, class: true }, false);
			var a_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(a);

			text_3 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(a_nodes, "Svelte");
			a_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			div_1_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			text_5 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(nodes, "\n\n");

			nav = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(nodes, "NAV", { class: true }, false);
			var nav_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(nav);

			ul = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(nav_nodes, "UL", { class: true }, false);
			var ul_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(ul);

			li = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(ul_nodes, "LI", {}, false);
			var li_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(li);

			a_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(li_nodes, "A", { class: true, href: true }, false);
			var a_1_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(a_1);

			text_6 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(a_1_nodes, "Guide");
			a_1_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			li_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);

			li_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(ul_nodes, "LI", {}, false);
			var li_1_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(li_1);

			a_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(li_1_nodes, "A", { class: true, href: true }, false);
			var a_2_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(a_2);

			text_7 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(a_2_nodes, "REPL");
			a_2_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			li_1_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);

			li_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(ul_nodes, "LI", {}, false);
			var li_2_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(li_2);

			a_3 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(li_2_nodes, "A", { class: true, href: true }, false);
			var a_3_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(a_3);

			text_8 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(a_3_nodes, "Blog");
			a_3_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			li_2_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);

			li_3 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(ul_nodes, "LI", {}, false);
			var li_3_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(li_3);

			a_4 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(li_3_nodes, "A", { href: true }, false);
			var a_4_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(a_4);

			text_9 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(a_4_nodes, "Chat");
			a_4_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			li_3_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);

			li_4 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(ul_nodes, "LI", {}, false);
			var li_4_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(li_4);

			a_5 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(li_4_nodes, "A", { href: true }, false);
			var a_5_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(a_5);

			text_10 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(a_5_nodes, "GitHub");
			a_5_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			li_4_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			ul_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			text_11 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(nav_nodes, "\n\n\t");

			div_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(nav_nodes, "DIV", { class: true }, false);
			var div_2_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(div_2);

			guidecontents._fragment.l(div_2_nodes);
			div_2_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			nav_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			this.h();
		},

		h: function hydrate() {
			encapsulateStyles(div);
			div.className = div_class_value = "" + (state.open ? "open": "closed") + " mousecatcher";
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["a" /* addListener */])(div, "click", click_handler);
			encapsulateStyles(div_1);
			encapsulateStyles(span);
			span.className = "menu-link";
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["a" /* addListener */])(span, "click", click_handler_1);
			encapsulateStyles(a);
			a.href = "/";
			a.className = "logo";
			div_1.className = "container";
			encapsulateStyles(nav);
			encapsulateStyles(ul);
			encapsulateStyles(li);
			encapsulateStyles(a_1);
			a_1.className = a_1_class_value = state.page === "guide" ? "active": "";
			a_1.href = "/guide";
			encapsulateStyles(li_1);
			encapsulateStyles(a_2);
			a_2.className = a_2_class_value = state.page === "repl" ? "active": "";
			a_2.href = "/repl";
			encapsulateStyles(li_2);
			encapsulateStyles(a_3);
			a_3.className = a_3_class_value = state.page === "blog" ? "active": "";
			a_3.href = "/blog";
			encapsulateStyles(li_3);
			encapsulateStyles(a_4);
			a_4.href = "https://gitter.im/sveltejs/svelte";
			encapsulateStyles(li_4);
			encapsulateStyles(a_5);
			a_5.href = "https://github.com/sveltejs/svelte";
			ul.className = "primary";
			encapsulateStyles(div_2);
			div_2.className = "secondary";
			nav.className = nav_class_value = state.open ? "open": "closed";
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["a" /* addListener */])(nav, "click", click_handler_2);
		},

		m: function mount(target, anchor) {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["t" /* insertNode */])(div, target, anchor);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["t" /* insertNode */])(text, target, anchor);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["t" /* insertNode */])(div_1, target, anchor);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(span, div_1);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_1, span);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_2, div_1);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(a, div_1);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_3, a);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["t" /* insertNode */])(text_5, target, anchor);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["t" /* insertNode */])(nav, target, anchor);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(ul, nav);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(li, ul);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(a_1, li);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_6, a_1);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(li_1, ul);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(a_2, li_1);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_7, a_2);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(li_2, ul);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(a_3, li_2);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_8, a_3);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(li_3, ul);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(a_4, li_3);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_9, a_4);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(li_4, ul);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(a_5, li_4);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_10, a_5);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_11, nav);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(div_2, nav);
			guidecontents._mount(div_2, null);
			component.refs.nav = nav;
		},

		p: function update(changed, state) {
			if ((changed.open) && div_class_value !== (div_class_value = "" + (state.open ? "open": "closed") + " mousecatcher")) {
				div.className = div_class_value;
			}

			if ((changed.open) && text_1_value !== (text_1_value = state.open ? 'Close' : 'Menu')) {
				text_1.data = text_1_value;
			}

			if ((changed.page) && a_1_class_value !== (a_1_class_value = state.page === "guide" ? "active": "")) {
				a_1.className = a_1_class_value;
			}

			if ((changed.page) && a_2_class_value !== (a_2_class_value = state.page === "repl" ? "active": "")) {
				a_2.className = a_2_class_value;
			}

			if ((changed.page) && a_3_class_value !== (a_3_class_value = state.page === "blog" ? "active": "")) {
				a_3.className = a_3_class_value;
			}

			if ((changed.open) && nav_class_value !== (nav_class_value = state.open ? "open": "closed")) {
				nav.className = nav_class_value;
			}
		},

		u: function unmount() {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */])(div);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */])(text);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */])(div_1);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */])(text_5);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */])(nav);
		},

		d: function destroy() {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["z" /* removeListener */])(div, "click", click_handler);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["z" /* removeListener */])(span, "click", click_handler_1);
			guidecontents.destroy(false);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["z" /* removeListener */])(nav, "click", click_handler_2);
			if (component.refs.nav === nav) component.refs.nav = null;
		}
	};
}

function Index(options) {
	Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["s" /* init */])(this, options);
	this.refs = {};
	this._state = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["c" /* assign */])(data(), options.data);

	if (!options.root) {
		this._oncreate = [];
		this._beforecreate = [];
		this._aftercreate = [];
	}

	this._fragment = create_main_fragment(this._state, this);

	if (options.target) {
		var nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
		this._fragment.m(options.target, options.anchor || null);

		this._lock = true;
		Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["e" /* callAll */])(this._beforecreate);
		Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["e" /* callAll */])(this._oncreate);
		Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["e" /* callAll */])(this._aftercreate);
		this._lock = false;
	}
}

Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["c" /* assign */])(Index.prototype, methods, __WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["w" /* proto */]);
/* harmony default export */ __webpack_exports__["a"] = (Index);
__webpack_require__(19);


/***/ }),

/***/ 16:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(17);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {"hmr":true}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(9)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../../../../Users/208311/Development/SVELTE/svelte.technology/node_modules/css-loader/index.js??ref--1-2!./tmp-74817YIb9XyKvYoOS.css", function() {
			var newContent = require("!!../../../../../../Users/208311/Development/SVELTE/svelte.technology/node_modules/css-loader/index.js??ref--1-2!./tmp-74817YIb9XyKvYoOS.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 168:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(169);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {"hmr":true}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(9)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../../../../Users/208311/Development/SVELTE/svelte.technology/node_modules/css-loader/index.js??ref--1-2!./tmp-74817pjX13VpvDKR9.css", function() {
			var newContent = require("!!../../../../../../Users/208311/Development/SVELTE/svelte.technology/node_modules/css-loader/index.js??ref--1-2!./tmp-74817pjX13VpvDKR9.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 169:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(8)(true);
// imports


// module
exports.push([module.i, ".hero[svelte-4008765715]{position:relative;padding:2em 1em;background-color:white;color:#333;clear:fix;min-height:calc(100vh - 7em);box-sizing:border-box}ul[svelte-4008765715]{max-width:32em;padding:0;margin:0 0 3em 0}li[svelte-4008765715]{position:relative;list-style:none;margin:0 0 1em 0;font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:#666}li[svelte-4008765715]::before{position:absolute;content:'\\25C6';top:0em;left:-1.4em;font-size:0.8em;color:#ddd}strong[svelte-4008765715]{font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";margin:0 auto;color:#333}.left[svelte-4008765715]{padding:0 0 0 1em}h1[svelte-4008765715]{display:block;font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(170,30,30);font-size:30vw;font-weight:300;line-height:1;margin:0;text-transform:lowercase;padding:0.5em 0 0 0}.right[svelte-4008765715]{padding:0 0 0 1em;margin:0 0 2em 0}h2[svelte-4008765715]{font-size:7.2vw;font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-weight:300;display:block;margin:0 0 4rem 0;max-width:11em}.learn-svelte[svelte-4008765715]{background-color:rgb(170,30,30);color:white;padding:0.5em 2em;border-radius:0.2em;line-height:1;font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1.2em;font-weight:800;text-transform:uppercase;width:calc(100% - 1em);max-width:16em;display:block;text-align:center}.learn-svelte[svelte-4008765715]:hover{background-color:rgba(170,30,30,0.9)}@media(min-width: 480px){.left[svelte-4008765715],.right[svelte-4008765715]{max-width:32em;margin:0 auto}h1[svelte-4008765715]{font-size:8em}h2[svelte-4008765715]{font-size:2em;max-width:none}li[svelte-4008765715]{font-size:1.2em}}@media(min-width: 960px){.hero[svelte-4008765715]{padding:6em 1em 2em 1em;max-width:64em;margin:0 auto}.left[svelte-4008765715]{position:relative;float:left;width:40%;box-sizing:border-box}.right[svelte-4008765715]{position:relative;float:left;width:60%;box-sizing:border-box}h1[svelte-4008765715]{position:relative;right:3rem;top:1.4rem;font-size:8em;text-align:right}h2[svelte-4008765715]{font-size:2.8em;line-height:1.2;margin:0 0 2rem 0;max-width:11em}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/", "", {"version":3,"sources":["/Users/208311/Development/SVELTE/svelte.technology/routes/index.html","/private/var/folders/5_/1988587d0t3_w4n0f1g4ydhwn85510/T/tmp-74817pjX13VpvDKR9.css"],"names":[],"mappings":"AAyBC,yBAAO,kBAEN,gBAGA,uBACA,WACA,UACA,6BACA,qBAAsB,CACtB,sBAEG,eAEH,UACA,gBAAiB,CACjB,sBAEG,kBAEH,gBACA,iBACA,4JACA,UAAW,CACX,8BAEW,kBAEX,gBACA,QACA,YACA,gBAEA,UAAW,CACX,0BAEO,4JAEP,cACA,UAAW,CACX,yBAEM,iBACY,CAClB,sBAEG,cAEH,4JACA,qBACA,eACA,gBACA,cACA,SACA,yBACA,mBAAoB,CACpB,0BAEO,kBAEP,gBAAiB,CACjB,sBAEG,gBAEH,4JACA,gBACA,cACA,kBACA,cAAe,CACf,iCAEc,gCAEd,YACA,kBACA,oBACA,cACA,4JACA,gBACA,gBACA,yBACA,uBACA,eACA,cACA,iBAAkB,CAClB,uCAEoB,oCACiB,CACrC,yBAE0B,mDACX,eAEd,aAAc,CACd,sBAEG,aACW,CACd,sBAEG,cAEH,cAAe,CACf,sBAEG,eACa,CAChB,CACD,yBAE0B,yBACnB,wBAEN,eACA,aAAc,CACd,yBAEM,kBAEN,WACA,UACA,qBAAsB,CACtB,0BAEO,kBAEP,WACA,UACA,qBAAsB,CACtB,sBAEG,kBAEH,WACA,WACA,cACA,gBAAiB,CACjB,sBAEG,gBAEH,gBACA,kBACA,cAAe,CACf,CACD;AC3KF,soVAAsoV","file":"tmp-74817pjX13VpvDKR9.css","sourcesContent":["<:Head>\n\t<title>Svelte • The magical disappearing UI framework</title>\n</:Head>\n\n<Layout>\n\t<div class='hero'>\n\t\t<div class='left'>\n\t\t\t<h1>Svelte</h1>\n\t\t</div>\n\n\t\t<div class='right'>\n\t\t\t<h2>The magical disappearing UI framework</h2>\n\n\t\t\t<ul>\n\t\t\t\t<li><strong>The web's JavaScript bloat crisis, solved.</strong> Svelte turns your templates into tiny, framework-less vanilla JavaScript.</li>\n\t\t\t\t<li><strong>Simple and familiar.</strong> Build apps out of composable, easy-to-write blocks using languages you already know.</li>\n\t\t\t\t<li><strong>Super fast, rock solid.</strong> Compile-time static analysis ensures the browser does no more work than it needs to.</li>\n\t\t\t</ul>\n\n\t\t\t<a class='learn-svelte' href='/guide'>Learn Svelte</a>\n\t\t</div>\n\t</div>\n</Layout>\n\n<style>\n\t.hero {\n\t\tposition: relative;\n\t\tpadding: 2em 1em;\n\t\t/*background-color: #333;\n\t\tcolor: #f4f4f4;*/\n\t\tbackground-color: white;\n\t\tcolor: #333;\n\t\tclear: fix;\n\t\tmin-height: calc(100vh - 7em);\n\t\tbox-sizing: border-box;\n\t}\n\n\tul {\n\t\tmax-width: 32em;\n\t\tpadding: 0;\n\t\tmargin: 0 0 3em 0;\n\t}\n\n\tli {\n\t\tposition: relative;\n\t\tlist-style: none;\n\t\tmargin: 0 0 1em 0;\n\t\tfont-family: Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n\t\tcolor: #666;\n\t}\n\n\tli::before {\n\t\tposition: absolute;\n\t\tcontent: '◆';\n\t\ttop: 0em;\n\t\tleft: -1.4em;\n\t\tfont-size: 0.8em;\n\t\t/*color: rgba(255,255,255,0.4);*/\n\t\tcolor: #ddd;\n\t}\n\n\tstrong {\n\t\tfont-family: Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n\t\tmargin: 0 auto;\n\t\tcolor: #333;\n\t}\n\n\t.left {\n\t\tpadding: 0 0 0 1em;\n\t}\n\n\th1 {\n\t\tdisplay: block;\n\t\tfont-family: Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n\t\tcolor: rgb(170,30,30);\n\t\tfont-size: 30vw;\n\t\tfont-weight: 300;\n\t\tline-height: 1;\n\t\tmargin: 0;\n\t\ttext-transform: lowercase;\n\t\tpadding: 0.5em 0 0 0;\n\t}\n\n\t.right {\n\t\tpadding: 0 0 0 1em;\n\t\tmargin: 0 0 2em 0;\n\t}\n\n\th2 {\n\t\tfont-size: 7.2vw;\n\t\tfont-family: Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n\t\tfont-weight: 300;\n\t\tdisplay: block;\n\t\tmargin: 0 0 4rem 0;\n\t\tmax-width: 11em;\n\t}\n\n\t.learn-svelte {\n\t\tbackground-color: rgb(170,30,30);\n\t\tcolor: white;\n\t\tpadding: 0.5em 2em;\n\t\tborder-radius: 0.2em;\n\t\tline-height: 1;\n\t\tfont-family: Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n\t\tfont-size: 1.2em;\n\t\tfont-weight: 800;\n\t\ttext-transform: uppercase;\n\t\twidth: calc(100% - 1em);\n\t\tmax-width: 16em;\n\t\tdisplay: block;\n\t\ttext-align: center;\n\t}\n\n\t.learn-svelte:hover {\n\t\tbackground-color: rgba(170,30,30,0.9);\n\t}\n\n\t@media (min-width: 480px) {\n\t\t.left, .right {\n\t\t\tmax-width: 32em;\n\t\t\tmargin: 0 auto;\n\t\t}\n\n\t\th1 {\n\t\t\tfont-size: 8em;\n\t\t}\n\n\t\th2 {\n\t\t\tfont-size: 2em;\n\t\t\tmax-width: none;\n\t\t}\n\n\t\tli {\n\t\t\tfont-size: 1.2em;\n\t\t}\n\t}\n\n\t@media (min-width: 960px) {\n\t\t.hero {\n\t\t\tpadding: 6em 1em 2em 1em;\n\t\t\tmax-width: 64em;\n\t\t\tmargin: 0 auto;\n\t\t}\n\n\t\t.left {\n\t\t\tposition: relative;\n\t\t\tfloat: left;\n\t\t\twidth: 40%;\n\t\t\tbox-sizing: border-box;\n\t\t}\n\n\t\t.right {\n\t\t\tposition: relative;\n\t\t\tfloat: left;\n\t\t\twidth: 60%;\n\t\t\tbox-sizing: border-box;\n\t\t}\n\n\t\th1 {\n\t\t\tposition: relative;\n\t\t\tright: 3rem;\n\t\t\ttop: 1.4rem;\n\t\t\tfont-size: 8em;\n\t\t\ttext-align: right;\n\t\t}\n\n\t\th2 {\n\t\t\tfont-size: 2.8em;\n\t\t\tline-height: 1.2;\n\t\t\tmargin: 0 0 2rem 0;\n\t\t\tmax-width: 11em;\n\t\t}\n\t}\n\n</style>\n\n<script>\n\timport Layout from './_components/Layout.html';\n\timport store from './_store.js';\n\n\texport default {\n\t\tcomponents: {\n\t\t\tLayout\n\t\t},\n\n\t\tstore: () => store\n\t};\n</script>",".hero[svelte-4008765715]{position:relative;padding:2em 1em;background-color:white;color:#333;clear:fix;min-height:calc(100vh - 7em);box-sizing:border-box}ul[svelte-4008765715]{max-width:32em;padding:0;margin:0 0 3em 0}li[svelte-4008765715]{position:relative;list-style:none;margin:0 0 1em 0;font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:#666}li[svelte-4008765715]::before{position:absolute;content:'◆';top:0em;left:-1.4em;font-size:0.8em;color:#ddd}strong[svelte-4008765715]{font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";margin:0 auto;color:#333}.left[svelte-4008765715]{padding:0 0 0 1em}h1[svelte-4008765715]{display:block;font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";color:rgb(170,30,30);font-size:30vw;font-weight:300;line-height:1;margin:0;text-transform:lowercase;padding:0.5em 0 0 0}.right[svelte-4008765715]{padding:0 0 0 1em;margin:0 0 2em 0}h2[svelte-4008765715]{font-size:7.2vw;font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-weight:300;display:block;margin:0 0 4rem 0;max-width:11em}.learn-svelte[svelte-4008765715]{background-color:rgb(170,30,30);color:white;padding:0.5em 2em;border-radius:0.2em;line-height:1;font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";font-size:1.2em;font-weight:800;text-transform:uppercase;width:calc(100% - 1em);max-width:16em;display:block;text-align:center}.learn-svelte[svelte-4008765715]:hover{background-color:rgba(170,30,30,0.9)}@media(min-width: 480px){.left[svelte-4008765715],.right[svelte-4008765715]{max-width:32em;margin:0 auto}h1[svelte-4008765715]{font-size:8em}h2[svelte-4008765715]{font-size:2em;max-width:none}li[svelte-4008765715]{font-size:1.2em}}@media(min-width: 960px){.hero[svelte-4008765715]{padding:6em 1em 2em 1em;max-width:64em;margin:0 auto}.left[svelte-4008765715]{position:relative;float:left;width:40%;box-sizing:border-box}.right[svelte-4008765715]{position:relative;float:left;width:60%;box-sizing:border-box}h1[svelte-4008765715]{position:relative;right:3rem;top:1.4rem;font-size:8em;text-align:right}h2[svelte-4008765715]{font-size:2.8em;line-height:1.2;margin:0 0 2rem 0;max-width:11em}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/"],"sourceRoot":""}]);

// exports


/***/ }),

/***/ 17:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(8)(true);
// imports


// module
exports.push([module.i, ".guide-toc[svelte-3051345958]{margin:0;padding:0}.guide-toc[svelte-3051345958] li[svelte-3051345958]{display:block;margin:0 0 2em 0}.section[svelte-3051345958]{display:block;font-weight:700;color:#333;font-size:1.2rem;margin:0 0 0.15em 0}.subsection[svelte-3051345958]{display:block;font-weight:500;color:#727272;font-size:1em;margin:0 0 0.15em 0}.section.active[svelte-3051345958],.subsection.active[svelte-3051345958]{color:#aa1e1e}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy8yMDgzMTEvRGV2ZWxvcG1lbnQvU1ZFTFRFL3N2ZWx0ZS50ZWNobm9sb2d5L3JvdXRlcy9fY29tcG9uZW50cy9HdWlkZUNvbnRlbnRzLmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiPHVsIGNsYXNzPSdndWlkZS10b2MnPlxuXHR7eyNlYWNoICRndWlkZV9jb250ZW50cyBhcyBzZWN0aW9ufX1cblx0XHQ8bGk+XG5cdFx0XHQ8YSBjbGFzcz0nc2VjdGlvbiB7e3NlY3Rpb24uc2x1ZyA9PT0gJGFjdGl2ZUd1aWRlU2VjdGlvbiA/IFwiYWN0aXZlXCI6IFwiXCJ9fScgaHJlZj0nL2d1aWRlI3t7c2VjdGlvbi5zbHVnfX0nPnt7c2VjdGlvbi5tZXRhZGF0YS50aXRsZX19PC9hPlxuXHRcdFx0e3sjZWFjaCBzZWN0aW9uLnN1YnNlY3Rpb25zIGFzIHN1YnNlY3Rpb259fVxuXHRcdFx0XHQ8YSBjbGFzcz0nc3Vic2VjdGlvbiB7e3N1YnNlY3Rpb24uc2x1ZyA9PT0gJGFjdGl2ZUd1aWRlU2VjdGlvbiA/IFwiYWN0aXZlXCI6IFwiXCJ9fScgaHJlZj0nL2d1aWRlI3t7c3Vic2VjdGlvbi5zbHVnfX0nPnt7c3Vic2VjdGlvbi50aXRsZX19PC9hPlxuXHRcdFx0e3svZWFjaH19XG5cdFx0PC9saT5cblx0e3svZWFjaH19XG48L3VsPlxuXG48c3R5bGU+XG5cdC5ndWlkZS10b2Mge1xuXHRcdG1hcmdpbjogMDtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5cblx0Lmd1aWRlLXRvYyBsaSB7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0bWFyZ2luOiAwIDAgMmVtIDA7XG5cdH1cblxuXHQuc2VjdGlvbiB7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0Zm9udC13ZWlnaHQ6IDcwMDtcblx0XHRjb2xvcjogIzMzMztcblx0XHRmb250LXNpemU6IDEuMnJlbTtcblx0XHRtYXJnaW46IDAgMCAwLjE1ZW0gMDtcblx0fVxuXG5cdC5zdWJzZWN0aW9uIHtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRmb250LXdlaWdodDogNTAwO1xuXHRcdGNvbG9yOiM3MjcyNzI7XG5cdFx0Zm9udC1zaXplOiAxZW07XG5cdFx0bWFyZ2luOiAwIDAgMC4xNWVtIDA7XG5cdH1cblxuXHQuc2VjdGlvbi5hY3RpdmUsIC5zdWJzZWN0aW9uLmFjdGl2ZSB7XG5cdFx0Y29sb3I6ICNhYTFlMWU7XG5cdH1cbjwvc3R5bGU+XG5cbjxzY3JpcHQ+XG5cdGV4cG9ydCBkZWZhdWx0IHtcblx0XHRkYXRhKCkge1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0Y29udGVudHM6IFtdXG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdG9uY3JlYXRlICgpIHtcblx0XHRcdGNvbnN0IG9uaGFzaGNoYW5nZSA9ICgpID0+IHtcblx0XHRcdFx0dGhpcy5zdG9yZS5zZXQoeyBhY3RpdmVHdWlkZVNlY3Rpb246IHdpbmRvdy5sb2NhdGlvbi5oYXNoLnNsaWNlKCAxICkgfSk7XG5cdFx0XHR9O1xuXG5cdFx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggJ2hhc2hjaGFuZ2UnLCBvbmhhc2hjaGFuZ2UsIGZhbHNlICk7XG5cdFx0XHR0aGlzLm9uKCAnZGVzdHJveScsICgpID0+IHtcblx0XHRcdFx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoICdoYXNoY2hhbmdlJywgb25oYXNoY2hhbmdlLCBmYWxzZSApO1xuXHRcdFx0fSk7XG5cblx0XHRcdG9uaGFzaGNoYW5nZSgpO1xuXHRcdH1cblx0fTtcbjwvc2NyaXB0PlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVlDLFVBQVUsbUJBQUMsQ0FBQyxBQUNYLE1BQU0sQ0FBRSxDQUFDLENBQ1QsT0FBTyxDQUFFLENBQUMsQUFDWCxDQUFDLEFBRUQsNkJBQVUsQ0FBQyxFQUFFLG1CQUFDLENBQUMsQUFDZCxPQUFPLENBQUUsS0FBSyxDQUNkLE1BQU0sQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEFBQ2xCLENBQUMsQUFFRCxRQUFRLG1CQUFDLENBQUMsQUFDVCxPQUFPLENBQUUsS0FBSyxDQUNkLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLEtBQUssQ0FBRSxJQUFJLENBQ1gsU0FBUyxDQUFFLE1BQU0sQ0FDakIsTUFBTSxDQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQUFDckIsQ0FBQyxBQUVELFdBQVcsbUJBQUMsQ0FBQyxBQUNaLE9BQU8sQ0FBRSxLQUFLLENBQ2QsV0FBVyxDQUFFLEdBQUcsQ0FDaEIsTUFBTSxPQUFPLENBQ2IsU0FBUyxDQUFFLEdBQUcsQ0FDZCxNQUFNLENBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxBQUNyQixDQUFDLEFBRUQsUUFBUSwwQkFBTyxDQUFFLFdBQVcsT0FBTyxtQkFBQyxDQUFDLEFBQ3BDLEtBQUssQ0FBRSxPQUFPLEFBQ2YsQ0FBQyJ9*/", "", {"version":3,"sources":["/Users/208311/Development/SVELTE/svelte.technology/routes/_components/GuideContents.html","/private/var/folders/5_/1988587d0t3_w4n0f1g4ydhwn85510/T/tmp-74817YIb9XyKvYoOS.css"],"names":[],"mappings":"AAYC,8BAAY,SAEX,SAAU,CACV,oDAEc,cAEd,gBAAiB,CACjB,4BAES,cAET,gBACA,WACA,iBACA,mBAAoB,CACpB,+BAEY,cAEZ,gBACA,cACA,cACA,mBAAoB,CACpB,yEAEoC,aACtB,CACd;ACvCF,07FAA07F","file":"tmp-74817YIb9XyKvYoOS.css","sourcesContent":["<ul class='guide-toc'>\n\t{{#each $guide_contents as section}}\n\t\t<li>\n\t\t\t<a class='section {{section.slug === $activeGuideSection ? \"active\": \"\"}}' href='/guide#{{section.slug}}'>{{section.metadata.title}}</a>\n\t\t\t{{#each section.subsections as subsection}}\n\t\t\t\t<a class='subsection {{subsection.slug === $activeGuideSection ? \"active\": \"\"}}' href='/guide#{{subsection.slug}}'>{{subsection.title}}</a>\n\t\t\t{{/each}}\n\t\t</li>\n\t{{/each}}\n</ul>\n\n<style>\n\t.guide-toc {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\n\t.guide-toc li {\n\t\tdisplay: block;\n\t\tmargin: 0 0 2em 0;\n\t}\n\n\t.section {\n\t\tdisplay: block;\n\t\tfont-weight: 700;\n\t\tcolor: #333;\n\t\tfont-size: 1.2rem;\n\t\tmargin: 0 0 0.15em 0;\n\t}\n\n\t.subsection {\n\t\tdisplay: block;\n\t\tfont-weight: 500;\n\t\tcolor:#727272;\n\t\tfont-size: 1em;\n\t\tmargin: 0 0 0.15em 0;\n\t}\n\n\t.section.active, .subsection.active {\n\t\tcolor: #aa1e1e;\n\t}\n</style>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tcontents: []\n\t\t\t}\n\t\t},\n\n\t\toncreate () {\n\t\t\tconst onhashchange = () => {\n\t\t\t\tthis.store.set({ activeGuideSection: window.location.hash.slice( 1 ) });\n\t\t\t};\n\n\t\t\twindow.addEventListener( 'hashchange', onhashchange, false );\n\t\t\tthis.on( 'destroy', () => {\n\t\t\t\twindow.removeEventListener( 'hashchange', onhashchange, false );\n\t\t\t});\n\n\t\t\tonhashchange();\n\t\t}\n\t};\n</script>\n",".guide-toc[svelte-3051345958]{margin:0;padding:0}.guide-toc[svelte-3051345958] li[svelte-3051345958]{display:block;margin:0 0 2em 0}.section[svelte-3051345958]{display:block;font-weight:700;color:#333;font-size:1.2rem;margin:0 0 0.15em 0}.subsection[svelte-3051345958]{display:block;font-weight:500;color:#727272;font-size:1em;margin:0 0 0.15em 0}.section.active[svelte-3051345958],.subsection.active[svelte-3051345958]{color:#aa1e1e}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy8yMDgzMTEvRGV2ZWxvcG1lbnQvU1ZFTFRFL3N2ZWx0ZS50ZWNobm9sb2d5L3JvdXRlcy9fY29tcG9uZW50cy9HdWlkZUNvbnRlbnRzLmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiPHVsIGNsYXNzPSdndWlkZS10b2MnPlxuXHR7eyNlYWNoICRndWlkZV9jb250ZW50cyBhcyBzZWN0aW9ufX1cblx0XHQ8bGk+XG5cdFx0XHQ8YSBjbGFzcz0nc2VjdGlvbiB7e3NlY3Rpb24uc2x1ZyA9PT0gJGFjdGl2ZUd1aWRlU2VjdGlvbiA/IFwiYWN0aXZlXCI6IFwiXCJ9fScgaHJlZj0nL2d1aWRlI3t7c2VjdGlvbi5zbHVnfX0nPnt7c2VjdGlvbi5tZXRhZGF0YS50aXRsZX19PC9hPlxuXHRcdFx0e3sjZWFjaCBzZWN0aW9uLnN1YnNlY3Rpb25zIGFzIHN1YnNlY3Rpb259fVxuXHRcdFx0XHQ8YSBjbGFzcz0nc3Vic2VjdGlvbiB7e3N1YnNlY3Rpb24uc2x1ZyA9PT0gJGFjdGl2ZUd1aWRlU2VjdGlvbiA/IFwiYWN0aXZlXCI6IFwiXCJ9fScgaHJlZj0nL2d1aWRlI3t7c3Vic2VjdGlvbi5zbHVnfX0nPnt7c3Vic2VjdGlvbi50aXRsZX19PC9hPlxuXHRcdFx0e3svZWFjaH19XG5cdFx0PC9saT5cblx0e3svZWFjaH19XG48L3VsPlxuXG48c3R5bGU+XG5cdC5ndWlkZS10b2Mge1xuXHRcdG1hcmdpbjogMDtcblx0XHRwYWRkaW5nOiAwO1xuXHR9XG5cblx0Lmd1aWRlLXRvYyBsaSB7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0bWFyZ2luOiAwIDAgMmVtIDA7XG5cdH1cblxuXHQuc2VjdGlvbiB7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0Zm9udC13ZWlnaHQ6IDcwMDtcblx0XHRjb2xvcjogIzMzMztcblx0XHRmb250LXNpemU6IDEuMnJlbTtcblx0XHRtYXJnaW46IDAgMCAwLjE1ZW0gMDtcblx0fVxuXG5cdC5zdWJzZWN0aW9uIHtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRmb250LXdlaWdodDogNTAwO1xuXHRcdGNvbG9yOiM3MjcyNzI7XG5cdFx0Zm9udC1zaXplOiAxZW07XG5cdFx0bWFyZ2luOiAwIDAgMC4xNWVtIDA7XG5cdH1cblxuXHQuc2VjdGlvbi5hY3RpdmUsIC5zdWJzZWN0aW9uLmFjdGl2ZSB7XG5cdFx0Y29sb3I6ICNhYTFlMWU7XG5cdH1cbjwvc3R5bGU+XG5cbjxzY3JpcHQ+XG5cdGV4cG9ydCBkZWZhdWx0IHtcblx0XHRkYXRhKCkge1xuXHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0Y29udGVudHM6IFtdXG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdG9uY3JlYXRlICgpIHtcblx0XHRcdGNvbnN0IG9uaGFzaGNoYW5nZSA9ICgpID0+IHtcblx0XHRcdFx0dGhpcy5zdG9yZS5zZXQoeyBhY3RpdmVHdWlkZVNlY3Rpb246IHdpbmRvdy5sb2NhdGlvbi5oYXNoLnNsaWNlKCAxICkgfSk7XG5cdFx0XHR9O1xuXG5cdFx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggJ2hhc2hjaGFuZ2UnLCBvbmhhc2hjaGFuZ2UsIGZhbHNlICk7XG5cdFx0XHR0aGlzLm9uKCAnZGVzdHJveScsICgpID0+IHtcblx0XHRcdFx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoICdoYXNoY2hhbmdlJywgb25oYXNoY2hhbmdlLCBmYWxzZSApO1xuXHRcdFx0fSk7XG5cblx0XHRcdG9uaGFzaGNoYW5nZSgpO1xuXHRcdH1cblx0fTtcbjwvc2NyaXB0PlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVlDLFVBQVUsbUJBQUMsQ0FBQyxBQUNYLE1BQU0sQ0FBRSxDQUFDLENBQ1QsT0FBTyxDQUFFLENBQUMsQUFDWCxDQUFDLEFBRUQsNkJBQVUsQ0FBQyxFQUFFLG1CQUFDLENBQUMsQUFDZCxPQUFPLENBQUUsS0FBSyxDQUNkLE1BQU0sQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEFBQ2xCLENBQUMsQUFFRCxRQUFRLG1CQUFDLENBQUMsQUFDVCxPQUFPLENBQUUsS0FBSyxDQUNkLFdBQVcsQ0FBRSxHQUFHLENBQ2hCLEtBQUssQ0FBRSxJQUFJLENBQ1gsU0FBUyxDQUFFLE1BQU0sQ0FDakIsTUFBTSxDQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQUFDckIsQ0FBQyxBQUVELFdBQVcsbUJBQUMsQ0FBQyxBQUNaLE9BQU8sQ0FBRSxLQUFLLENBQ2QsV0FBVyxDQUFFLEdBQUcsQ0FDaEIsTUFBTSxPQUFPLENBQ2IsU0FBUyxDQUFFLEdBQUcsQ0FDZCxNQUFNLENBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxBQUNyQixDQUFDLEFBRUQsUUFBUSwwQkFBTyxDQUFFLFdBQVcsT0FBTyxtQkFBQyxDQUFDLEFBQ3BDLEtBQUssQ0FBRSxPQUFPLEFBQ2YsQ0FBQyJ9*/"],"sourceRoot":""}]);

// exports


/***/ }),

/***/ 18:
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),

/***/ 19:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(20);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {"hmr":true}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(9)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../../../../Users/208311/Development/SVELTE/svelte.technology/node_modules/css-loader/index.js??ref--1-2!./tmp-748176FXmW7RSmeWW.css", function() {
			var newContent = require("!!../../../../../../Users/208311/Development/SVELTE/svelte.technology/node_modules/css-loader/index.js??ref--1-2!./tmp-748176FXmW7RSmeWW.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 20:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(8)(true);
// imports


// module
exports.push([module.i, ".mousecatcher[svelte-2829050598]{position:fixed;left:0;top:0;width:100vw;height:100vh;background-color:black;pointer-events:none;opacity:0;z-index:3}.mousecatcher.open[svelte-2829050598]{pointer-events:all;opacity:0.3}@keyframes svelte-2829050598-fadein{from{opacity:0}to{opacity:1}}.container[svelte-2829050598]{position:fixed;width:100%;height:3em;background-color:#333;color:#eee;border-bottom:2px solid rgb(170,30,30);font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";z-index:5}nav[svelte-2829050598]{position:fixed;width:14em;height:calc(100vh - 3em);top:3em;font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";background-color:white;transform:translate(-100%,0);transition:transform 0.2s cubic-bezier(.17,.67,.24,.99);border-right:1px solid #eee;z-index:5;padding:1em;user-select:none}.open[svelte-2829050598]{transform:translate(0,0);transition:transform 0.3s cubic-bezier(.17,.67,.24,.99);overflow-y:auto}.menu-link[svelte-2829050598]{display:inline;position:absolute;top:0;left:1rem;font-size:1em;line-height:3.1em;color:#ccc;cursor:pointer;font-weight:500;-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}.logo[svelte-2829050598]{position:absolute;top:50%;left:50%;transform:translate(-50%, -45%);-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none;line-height:1;text-transform:lowercase;color:white;font-size:1.4rem}ul[svelte-2829050598]{display:block;margin:0;padding:0;list-style:none}.primary[svelte-2829050598]{margin:0 0 2em 0}.primary[svelte-2829050598] li[svelte-2829050598]{position:relative;display:block}.primary[svelte-2829050598] .active[svelte-2829050598]{color:#333;font-weight:700}.primary[svelte-2829050598] li a[svelte-2829050598]{display:block;color:#727272;font-size:1.3em;font-weight:500;padding:0.75em 0;line-height:1}@media(min-width: 768px){.mousecatcher[svelte-2829050598],.menu-link[svelte-2829050598]{display:none}.container[svelte-2829050598]{height:4em}nav[svelte-2829050598]{width:100%;height:4em;padding:0 1.5em 0 0;transform:none;transition:none;height:0}.primary[svelte-2829050598]{position:fixed;top:0;right:1em;margin:0}.primary[svelte-2829050598] li[svelte-2829050598]{display:inline-block}.primary[svelte-2829050598] li a[svelte-2829050598]{padding:1.5em 0.5em;color:#ccc;font-size:1rem}.primary[svelte-2829050598] li a.active[svelte-2829050598]{color:white;font-weight:500}.primary[svelte-2829050598] li[svelte-2829050598]::after{position:absolute;top:1.5rem;right:-0.3em;content:'/';font-size:0.8em;color:#999}.primary[svelte-2829050598] li[svelte-2829050598]:last-child::after{content:''}.secondary[svelte-2829050598]{display:none}.logo[svelte-2829050598]{position:absolute;top:1rem;left:1rem;font-size:2em;font-weight:300;transform:none}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/", "", {"version":3,"sources":["/Users/208311/Development/SVELTE/svelte.technology/routes/_components/Nav.html","/private/var/folders/5_/1988587d0t3_w4n0f1g4ydhwn85510/T/tmp-748176FXmW7RSmeWW.css"],"names":[],"mappings":"AAsBC,iCAAe,eAEd,OACA,MACA,YACA,aACA,uBACA,oBACA,UAEA,SAAU,CACV,sCAEmB,mBAEnB,WAAY,CACZ,oCAEkB,KACZ,SAAW,CAAG,GAChB,SAAW,CAAG,CAClB,8BAEW,eAEX,WACA,WACA,sBACA,WACA,uCACA,4JACA,SAAU,CACV,uBAEI,eAEJ,WACA,yBACA,QACA,4JACA,uBACA,6BACA,wDACA,4BACA,UACA,YACA,gBAAiB,CACjB,yBAEM,yBAEN,wDACA,eAAgB,CAChB,8BAEW,eAEX,kBACA,MACA,UACA,cACA,kBACA,WACA,eACA,gBACA,wCACA,0BAA2B,CAC3B,yBAEM,kBAEN,QACA,SACA,gCACA,wCACA,2BACA,cACA,yBACA,YACA,gBAAiB,CACjB,sBAEG,cAEH,SACA,UACA,eAAgB,CAChB,4BAES,gBACQ,CACjB,kDAEY,kBAEZ,aAAc,CACd,uDAEiB,WAEjB,eAAgB,CAChB,oDAIc,cAEd,cACA,gBACA,gBACA,iBACA,aAAc,CACd,yBAE0B,+DACC,YACb,CACb,8BAEW,UACA,CACX,uBAEI,WAEJ,WACA,oBACA,eACA,gBACA,QAAS,CACT,4BAES,eAET,MACA,UACA,QAAS,CACT,kDAEY,oBACS,CACrB,oDAEc,oBAEd,WACA,cAAe,CACf,2DAEqB,YAErB,eAAgB,CAChB,yDAEmB,kBAEnB,WACA,aACA,YACA,gBACA,UAAW,CACX,oEAE8B,UACnB,CACX,8BAEW,YACE,CACb,yBAEM,kBAEN,SACA,UACA,cACA,gBACA,cAAe,CACf,CACD;ACxMF,8sYAA8sY","file":"tmp-748176FXmW7RSmeWW.css","sourcesContent":["<div class='{{open ? \"open\": \"closed\"}} mousecatcher' on:click='set({ open: false })'></div>\n\n<div class='container'>\n\t<span class=\"menu-link\" on:click='toggleOpen()'>{{open ? 'Close' : 'Menu'}}</span>\n\t<a href='/' class='logo'>Svelte</a>\n</div>\n\n<nav ref:nav class='{{open ? \"open\": \"closed\"}}' on:click='set({ open: false })'>\n\t<ul class='primary'>\n\t\t<li><a class='{{page === \"guide\" ? \"active\": \"\"}}' href='/guide'>Guide</a></li>\n\t\t<li><a class='{{page === \"repl\" ? \"active\": \"\"}}' href='/repl'>REPL</a></li>\n\t\t<li><a class='{{page === \"blog\" ? \"active\": \"\"}}' href='/blog'>Blog</a></li>\n\t\t<li><a href='https://gitter.im/sveltejs/svelte'>Chat</a></li>\n\t\t<li><a href='https://github.com/sveltejs/svelte'>GitHub</a></li>\n\t</ul>\n\n\t<div class='secondary'>\n\t\t<GuideContents/>\n\t</div>\n</nav>\n\n<style>\n\t.mousecatcher {\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\twidth: 100vw;\n\t\theight: 100vh;\n\t\tbackground-color: black;\n\t\tpointer-events: none;\n\t\topacity: 0;\n\t\t/*transition: opacity 0.4s;*/\n\t\tz-index: 3;\n\t}\n\n\t.mousecatcher.open {\n\t\tpointer-events: all;\n\t\topacity: 0.3;\n\t}\n\n\t@keyframes fadein {\n\t\tfrom { opacity: 0; }\n\t\tto { opacity: 1; }\n\t}\n\n\t.container {\n\t\tposition: fixed;\n\t\twidth: 100%;\n\t\theight: 3em;\n\t\tbackground-color: #333;\n\t\tcolor: #eee;\n\t\tborder-bottom: 2px solid rgb(170,30,30);\n\t\tfont-family: Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n\t\tz-index: 5;\n\t}\n\n\tnav {\n\t\tposition: fixed;\n\t\twidth: 14em;\n\t\theight: calc(100vh - 3em);\n\t\ttop: 3em;\n\t\tfont-family: Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n\t\tbackground-color: white;\n\t\ttransform: translate(-100%,0);\n\t\ttransition: transform 0.2s cubic-bezier(.17,.67,.24,.99);\n\t\tborder-right: 1px solid #eee;\n\t\tz-index: 5;\n\t\tpadding: 1em;\n\t\tuser-select: none;\n\t}\n\n\t.open {\n\t\ttransform: translate(0,0);\n\t\ttransition: transform 0.3s cubic-bezier(.17,.67,.24,.99);\n\t\toverflow-y: auto;\n\t}\n\n\t.menu-link {\n\t\tdisplay: inline;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 1rem;\n\t\tfont-size: 1em;\n\t\tline-height: 3.1em;\n\t\tcolor: #ccc;\n\t\tcursor: pointer;\n\t\tfont-weight: 500;\n\t\t-webkit-tap-highlight-color: transparent;\n\t\t-webkit-touch-callout: none;\n\t}\n\n\t.logo {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -45%);\n\t\t-webkit-tap-highlight-color: transparent;\n\t\t-webkit-touch-callout: none;\n\t\tline-height: 1;\n\t\ttext-transform: lowercase;\n\t\tcolor: white;\n\t\tfont-size: 1.4rem;\n\t}\n\n\tul {\n\t\tdisplay: block;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tlist-style: none;\n\t}\n\n\t.primary {\n\t\tmargin: 0 0 2em 0;\n\t}\n\n\t.primary li {\n\t\tposition: relative;\n\t\tdisplay: block;\n\t}\n\n\t.primary .active {\n\t\tcolor: #333;\n\t\tfont-weight: 700;\n\t}\n\n\t/**/\n\n\t.primary li a {\n\t\tdisplay: block;\n\t\tcolor: #727272;\n\t\tfont-size: 1.3em;\n\t\tfont-weight: 500;\n\t\tpadding: 0.75em 0;\n\t\tline-height: 1;\n\t}\n\n\t@media (min-width: 768px) {\n\t\t.mousecatcher, .menu-link {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t.container {\n\t\t\theight: 4em;\n\t\t}\n\n\t\tnav {\n\t\t\twidth: 100%;\n\t\t\theight: 4em;\n\t\t\tpadding: 0 1.5em 0 0;\n\t\t\ttransform: none;\n\t\t\ttransition: none;\n\t\t\theight: 0;\n\t\t}\n\n\t\t.primary {\n\t\t\tposition: fixed;\n\t\t\ttop: 0;\n\t\t\tright: 1em;\n\t\t\tmargin: 0;\n\t\t}\n\n\t\t.primary li {\n\t\t\tdisplay: inline-block;\n\t\t}\n\n\t\t.primary li a {\n\t\t\tpadding: 1.5em 0.5em;\n\t\t\tcolor: #ccc;\n\t\t\tfont-size: 1rem;\n\t\t}\n\n\t\t.primary li a.active {\n\t\t\tcolor: white;\n\t\t\tfont-weight: 500;\n\t\t}\n\n\t\t.primary li::after {\n\t\t\tposition: absolute;\n\t\t\ttop: 1.5rem;\n\t\t\tright: -0.3em;\n\t\t\tcontent: '/';\n\t\t\tfont-size: 0.8em;\n\t\t\tcolor: #999;\n\t\t}\n\n\t\t.primary li:last-child::after {\n\t\t\tcontent: '';\n\t\t}\n\n\t\t.secondary {\n\t\t\tdisplay: none;\n\t\t}\n\n\t\t.logo {\n\t\t\tposition: absolute;\n\t\t\ttop: 1rem;\n\t\t\tleft: 1rem;\n\t\t\tfont-size: 2em;\n\t\t\tfont-weight: 300;\n\t\t\ttransform: none;\n\t\t}\n\t}\n</style>\n\n<script>\n\timport GuideContents from './GuideContents.html';\n\n\texport default {\n\t\tdata () {\n\t\t\treturn {\n\t\t\t\topen: false,\n\t\t\t\troute: '',\n\t\t\t\tactive: null\n\t\t\t};\n\t\t},\n\n\t\tmethods: {\n\t\t\ttoggleOpen () {\n\t\t\t\tconst open = this.get( 'open' );\n\n\t\t\t\t// if the menu is closing, scroll back to the top *after* it\n\t\t\t\t// shuts. otherwise, scroll back to the top immediately\n\t\t\t\t// (just in case the user reopened before it happened).\n\t\t\t\t// The reason we don't just do it when the menu opens is\n\t\t\t\t// that the scrollbar visibly flashes\n\t\t\t\tif ( open ) {\n\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\tif ( !this.get( 'open' ) ) {\n\t\t\t\t\t\t\tthis.refs.nav.scrollTop = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 350 );\n\t\t\t\t} else {\n\t\t\t\t\tthis.refs.nav.scrollTop = 0;\n\t\t\t\t}\n\n\t\t\t\tthis.set({ open: !open });\n\t\t\t}\n\t\t},\n\n\t\tcomponents: {\n\t\t\tGuideContents\n\t\t}\n\t};\n</script>\n",".mousecatcher[svelte-2829050598]{position:fixed;left:0;top:0;width:100vw;height:100vh;background-color:black;pointer-events:none;opacity:0;z-index:3}.mousecatcher.open[svelte-2829050598]{pointer-events:all;opacity:0.3}@keyframes svelte-2829050598-fadein{from{opacity:0}to{opacity:1}}.container[svelte-2829050598]{position:fixed;width:100%;height:3em;background-color:#333;color:#eee;border-bottom:2px solid rgb(170,30,30);font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";z-index:5}nav[svelte-2829050598]{position:fixed;width:14em;height:calc(100vh - 3em);top:3em;font-family:Rajdhani, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";background-color:white;transform:translate(-100%,0);transition:transform 0.2s cubic-bezier(.17,.67,.24,.99);border-right:1px solid #eee;z-index:5;padding:1em;user-select:none}.open[svelte-2829050598]{transform:translate(0,0);transition:transform 0.3s cubic-bezier(.17,.67,.24,.99);overflow-y:auto}.menu-link[svelte-2829050598]{display:inline;position:absolute;top:0;left:1rem;font-size:1em;line-height:3.1em;color:#ccc;cursor:pointer;font-weight:500;-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none}.logo[svelte-2829050598]{position:absolute;top:50%;left:50%;transform:translate(-50%, -45%);-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none;line-height:1;text-transform:lowercase;color:white;font-size:1.4rem}ul[svelte-2829050598]{display:block;margin:0;padding:0;list-style:none}.primary[svelte-2829050598]{margin:0 0 2em 0}.primary[svelte-2829050598] li[svelte-2829050598]{position:relative;display:block}.primary[svelte-2829050598] .active[svelte-2829050598]{color:#333;font-weight:700}.primary[svelte-2829050598] li a[svelte-2829050598]{display:block;color:#727272;font-size:1.3em;font-weight:500;padding:0.75em 0;line-height:1}@media(min-width: 768px){.mousecatcher[svelte-2829050598],.menu-link[svelte-2829050598]{display:none}.container[svelte-2829050598]{height:4em}nav[svelte-2829050598]{width:100%;height:4em;padding:0 1.5em 0 0;transform:none;transition:none;height:0}.primary[svelte-2829050598]{position:fixed;top:0;right:1em;margin:0}.primary[svelte-2829050598] li[svelte-2829050598]{display:inline-block}.primary[svelte-2829050598] li a[svelte-2829050598]{padding:1.5em 0.5em;color:#ccc;font-size:1rem}.primary[svelte-2829050598] li a.active[svelte-2829050598]{color:white;font-weight:500}.primary[svelte-2829050598] li[svelte-2829050598]::after{position:absolute;top:1.5rem;right:-0.3em;content:'/';font-size:0.8em;color:#999}.primary[svelte-2829050598] li[svelte-2829050598]:last-child::after{content:''}.secondary[svelte-2829050598]{display:none}.logo[svelte-2829050598]{position:absolute;top:1rem;left:1rem;font-size:2em;font-weight:300;transform:none}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/"],"sourceRoot":""}]);

// exports


/***/ }),

/***/ 21:
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(22);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {"hmr":true}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(9)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../../../../../Users/208311/Development/SVELTE/svelte.technology/node_modules/css-loader/index.js??ref--1-2!./tmp-74817ansKsP4dm8ei.css", function() {
			var newContent = require("!!../../../../../../Users/208311/Development/SVELTE/svelte.technology/node_modules/css-loader/index.js??ref--1-2!./tmp-74817ansKsP4dm8ei.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 22:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(8)(true);
// imports


// module
exports.push([module.i, "div[svelte-428658705]{position:relative;padding:3em 0 0 0;overflow-x:hidden}@media(min-width: 768px){div[svelte-428658705]{padding:4em 0 0 0}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy8yMDgzMTEvRGV2ZWxvcG1lbnQvU1ZFTFRFL3N2ZWx0ZS50ZWNobm9sb2d5L3JvdXRlcy9fY29tcG9uZW50cy9MYXlvdXQuaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyI8TmF2IDpwYWdlLz5cblxuPGRpdj5cblx0PHNsb3Q+PC9zbG90PlxuPC9kaXY+XG5cbjxzdHlsZT5cblx0ZGl2IHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0cGFkZGluZzogM2VtIDAgMCAwO1xuXHRcdG92ZXJmbG93LXg6IGhpZGRlbjtcblx0fVxuXG5cdEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuXHRcdGRpdiB7XG5cdFx0XHRwYWRkaW5nOiA0ZW0gMCAwIDA7XG5cdFx0fVxuXHR9XG48L3N0eWxlPlxuXG48c2NyaXB0PlxuXHRpbXBvcnQgTmF2IGZyb20gJy4vTmF2Lmh0bWwnO1xuXG5cdGV4cG9ydCBkZWZhdWx0IHtcblx0XHRjb21wb25lbnRzOiB7XG5cdFx0XHROYXZcblx0XHR9XG5cdH07XG48L3NjcmlwdD4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT0MsR0FBRyxrQkFBQyxDQUFDLEFBQ0osUUFBUSxDQUFFLFFBQVEsQ0FDbEIsT0FBTyxDQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDbEIsVUFBVSxDQUFFLE1BQU0sQUFDbkIsQ0FBQyxBQUVELE1BQU0sQUFBQyxZQUFZLEtBQUssQ0FBQyxBQUFDLENBQUMsQUFDMUIsR0FBRyxrQkFBQyxDQUFDLEFBQ0osT0FBTyxDQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQUFDbkIsQ0FBQyxBQUNGLENBQUMifQ==*/", "", {"version":3,"sources":["/Users/208311/Development/SVELTE/svelte.technology/routes/_components/Layout.html","/private/var/folders/5_/1988587d0t3_w4n0f1g4ydhwn85510/T/tmp-74817ansKsP4dm8ei.css"],"names":[],"mappings":"AAOC,sBAAK,kBAEJ,kBACA,iBAAkB,CAClB,yBAE0B,sBACrB,iBACc,CAClB,CACD;AChBF,0lCAA0lC","file":"tmp-74817ansKsP4dm8ei.css","sourcesContent":["<Nav :page/>\n\n<div>\n\t<slot></slot>\n</div>\n\n<style>\n\tdiv {\n\t\tposition: relative;\n\t\tpadding: 3em 0 0 0;\n\t\toverflow-x: hidden;\n\t}\n\n\t@media (min-width: 768px) {\n\t\tdiv {\n\t\t\tpadding: 4em 0 0 0;\n\t\t}\n\t}\n</style>\n\n<script>\n\timport Nav from './Nav.html';\n\n\texport default {\n\t\tcomponents: {\n\t\t\tNav\n\t\t}\n\t};\n</script>","div[svelte-428658705]{position:relative;padding:3em 0 0 0;overflow-x:hidden}@media(min-width: 768px){div[svelte-428658705]{padding:4em 0 0 0}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy8yMDgzMTEvRGV2ZWxvcG1lbnQvU1ZFTFRFL3N2ZWx0ZS50ZWNobm9sb2d5L3JvdXRlcy9fY29tcG9uZW50cy9MYXlvdXQuaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyI8TmF2IDpwYWdlLz5cblxuPGRpdj5cblx0PHNsb3Q+PC9zbG90PlxuPC9kaXY+XG5cbjxzdHlsZT5cblx0ZGl2IHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0cGFkZGluZzogM2VtIDAgMCAwO1xuXHRcdG92ZXJmbG93LXg6IGhpZGRlbjtcblx0fVxuXG5cdEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuXHRcdGRpdiB7XG5cdFx0XHRwYWRkaW5nOiA0ZW0gMCAwIDA7XG5cdFx0fVxuXHR9XG48L3N0eWxlPlxuXG48c2NyaXB0PlxuXHRpbXBvcnQgTmF2IGZyb20gJy4vTmF2Lmh0bWwnO1xuXG5cdGV4cG9ydCBkZWZhdWx0IHtcblx0XHRjb21wb25lbnRzOiB7XG5cdFx0XHROYXZcblx0XHR9XG5cdH07XG48L3NjcmlwdD4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT0MsR0FBRyxrQkFBQyxDQUFDLEFBQ0osUUFBUSxDQUFFLFFBQVEsQ0FDbEIsT0FBTyxDQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDbEIsVUFBVSxDQUFFLE1BQU0sQUFDbkIsQ0FBQyxBQUVELE1BQU0sQUFBQyxZQUFZLEtBQUssQ0FBQyxBQUFDLENBQUMsQUFDMUIsR0FBRyxrQkFBQyxDQUFDLEFBQ0osT0FBTyxDQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQUFDbkIsQ0FBQyxBQUNGLENBQUMifQ==*/"],"sourceRoot":""}]);

// exports


/***/ }),

/***/ 23:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svelte_store_js__ = __webpack_require__(24);


const store = new __WEBPACK_IMPORTED_MODULE_0_svelte_store_js__["a" /* Store */]({
	guide_contents: []
});

fetch(`/api/guide/contents`).then(r => r.json()).then(guide_contents => {
	store.set({ guide_contents });
});

/* harmony default export */ __webpack_exports__["a"] = (store);

/***/ }),

/***/ 24:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Store; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shared_js__ = __webpack_require__(7);


function Store(state) {
	this._observers = { pre: Object(__WEBPACK_IMPORTED_MODULE_0__shared_js__["d" /* blankObject */])(), post: Object(__WEBPACK_IMPORTED_MODULE_0__shared_js__["d" /* blankObject */])() };
	this._changeHandlers = [];
	this._dependents = [];

	this._computed = Object(__WEBPACK_IMPORTED_MODULE_0__shared_js__["d" /* blankObject */])();
	this._sortedComputedProperties = [];

	this._state = Object(__WEBPACK_IMPORTED_MODULE_0__shared_js__["c" /* assign */])({}, state);
}

Object(__WEBPACK_IMPORTED_MODULE_0__shared_js__["c" /* assign */])(Store.prototype, {
	_add: function(component, props) {
		this._dependents.push({
			component: component,
			props: props
		});
	},

	_init: function(props) {
		var state = {};
		for (var i = 0; i < props.length; i += 1) {
			var prop = props[i];
			state['$' + prop] = this._state[prop];
		}
		return state;
	},

	_remove: function(component) {
		var i = this._dependents.length;
		while (i--) {
			if (this._dependents[i].component === component) {
				this._dependents.splice(i, 1);
				return;
			}
		}
	},

	_sortComputedProperties: function() {
		var computed = this._computed;
		var sorted = this._sortedComputedProperties = [];
		var cycles;
		var visited = Object(__WEBPACK_IMPORTED_MODULE_0__shared_js__["d" /* blankObject */])();

		function visit(key) {
			if (cycles[key]) {
				throw new Error('Cyclical dependency detected');
			}

			if (visited[key]) return;
			visited[key] = true;

			var c = computed[key];

			if (c) {
				cycles[key] = true;
				c.deps.forEach(visit);
				sorted.push(c);
			}
		}

		for (var key in this._computed) {
			cycles = Object(__WEBPACK_IMPORTED_MODULE_0__shared_js__["d" /* blankObject */])();
			visit(key);
		}
	},

	compute: function(key, deps, fn) {
		var store = this;
		var value;

		var c = {
			deps: deps,
			update: function(state, changed, dirty) {
				var values = deps.map(function(dep) {
					if (dep in changed) dirty = true;
					return state[dep];
				});

				if (dirty) {
					var newValue = fn.apply(null, values);
					if (Object(__WEBPACK_IMPORTED_MODULE_0__shared_js__["p" /* differs */])(newValue, value)) {
						value = newValue;
						changed[key] = true;
						state[key] = value;
					}
				}
			}
		};

		c.update(this._state, {}, true);

		this._computed[key] = c;
		this._sortComputedProperties();
	},

	get: __WEBPACK_IMPORTED_MODULE_0__shared_js__["r" /* get */],

	observe: __WEBPACK_IMPORTED_MODULE_0__shared_js__["v" /* observe */],

	onchange: function(callback) {
		this._changeHandlers.push(callback);
		return {
			cancel: function() {
				var index = this._changeHandlers.indexOf(callback);
				if (~index) this._changeHandlers.splice(index, 1);
			}
		};
	},

	set: function(newState) {
		var oldState = this._state,
			changed = this._changed = {},
			dirty = false;

		for (var key in newState) {
			if (this._computed[key]) throw new Error("'" + key + "' is a read-only property");
			if (Object(__WEBPACK_IMPORTED_MODULE_0__shared_js__["p" /* differs */])(newState[key], oldState[key])) changed[key] = dirty = true;
		}
		if (!dirty) return;

		this._state = Object(__WEBPACK_IMPORTED_MODULE_0__shared_js__["c" /* assign */])({}, oldState, newState);

		for (var i = 0; i < this._sortedComputedProperties.length; i += 1) {
			this._sortedComputedProperties[i].update(this._state, changed);
		}

		for (var i = 0; i < this._changeHandlers.length; i += 1) {
			this._changeHandlers[i](this._state, changed);
		}

		Object(__WEBPACK_IMPORTED_MODULE_0__shared_js__["q" /* dispatchObservers */])(this, this._observers.pre, changed, this._state, oldState);

		var dependents = this._dependents.slice(); // guard against mutations
		for (var i = 0; i < dependents.length; i += 1) {
			var dependent = dependents[i];
			var componentState = {};
			dirty = false;

			for (var j = 0; j < dependent.props.length; j += 1) {
				var prop = dependent.props[j];
				if (prop in changed) {
					componentState['$' + prop] = this._state[prop];
					dirty = true;
				}
			}

			if (dirty) dependent.component.set(componentState);
		}

		Object(__WEBPACK_IMPORTED_MODULE_0__shared_js__["q" /* dispatchObservers */])(this, this._observers.post, changed, this._state, oldState);
	}
});



/***/ }),

/***/ 5:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_Layout_html__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__store_js__ = __webpack_require__(23);
/* routes/index.html generated by Svelte v1.49.0 */




function store_1() {
	return __WEBPACK_IMPORTED_MODULE_2__store_js__["a" /* default */];
}

function encapsulateStyles(node) {
	Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["C" /* setAttribute */])(node, "svelte-4008765715", "");
}

function create_main_fragment(state, component) {
	var title, text, text_2, text_3, div, div_1, h1, text_4, text_6, div_2, h2, text_7, text_8, ul, li, strong, text_9, text_10, li_1, strong_1, text_11, text_12, li_2, strong_2, text_13, text_14, text_15, a, text_16, text_19;

	var layout = new __WEBPACK_IMPORTED_MODULE_1__components_Layout_html__["a" /* default */]({
		root: component.root,
		slots: { default: Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["k" /* createFragment */])() }
	});

	return {
		c: function create() {
			title = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("title");
			text = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("Svelte • The magical disappearing UI framework");
			text_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("\n\n");
			text_3 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("\n\t");
			div = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("div");
			div_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("div");
			h1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("h1");
			text_4 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("Svelte");
			text_6 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("\n\n\t\t");
			div_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("div");
			h2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("h2");
			text_7 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("The magical disappearing UI framework");
			text_8 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("\n\n\t\t\t");
			ul = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("ul");
			li = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("li");
			strong = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("strong");
			text_9 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("The web's JavaScript bloat crisis, solved.");
			text_10 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])(" Svelte turns your templates into tiny, framework-less vanilla JavaScript.");
			li_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("li");
			strong_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("strong");
			text_11 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("Simple and familiar.");
			text_12 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])(" Build apps out of composable, easy-to-write blocks using languages you already know.");
			li_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("li");
			strong_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("strong");
			text_13 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("Super fast, rock solid.");
			text_14 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])(" Compile-time static analysis ensures the browser does no more work than it needs to.");
			text_15 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("\n\n\t\t\t");
			a = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("a");
			text_16 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("Learn Svelte");
			text_19 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("\n");
			layout._fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			title = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["j" /* createElement */])("title");
			text = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["l" /* createText */])("Svelte • The magical disappearing UI framework");
			text_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(nodes, "\n\n");
			text_3 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(nodes, "\n\t");

			div = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(nodes, "DIV", { class: true }, false);
			var div_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(div);

			div_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(div_nodes, "DIV", { class: true }, false);
			var div_1_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(div_1);

			h1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(div_1_nodes, "H1", {}, false);
			var h1_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(h1);

			text_4 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(h1_nodes, "Svelte");
			h1_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			div_1_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			text_6 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(div_nodes, "\n\n\t\t");

			div_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(div_nodes, "DIV", { class: true }, false);
			var div_2_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(div_2);

			h2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(div_2_nodes, "H2", {}, false);
			var h2_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(h2);

			text_7 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(h2_nodes, "The magical disappearing UI framework");
			h2_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			text_8 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(div_2_nodes, "\n\n\t\t\t");

			ul = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(div_2_nodes, "UL", {}, false);
			var ul_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(ul);

			li = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(ul_nodes, "LI", {}, false);
			var li_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(li);

			strong = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(li_nodes, "STRONG", {}, false);
			var strong_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(strong);

			text_9 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(strong_nodes, "The web's JavaScript bloat crisis, solved.");
			strong_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			text_10 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(li_nodes, " Svelte turns your templates into tiny, framework-less vanilla JavaScript.");
			li_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);

			li_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(ul_nodes, "LI", {}, false);
			var li_1_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(li_1);

			strong_1 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(li_1_nodes, "STRONG", {}, false);
			var strong_1_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(strong_1);

			text_11 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(strong_1_nodes, "Simple and familiar.");
			strong_1_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			text_12 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(li_1_nodes, " Build apps out of composable, easy-to-write blocks using languages you already know.");
			li_1_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);

			li_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(ul_nodes, "LI", {}, false);
			var li_2_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(li_2);

			strong_2 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(li_2_nodes, "STRONG", {}, false);
			var strong_2_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(strong_2);

			text_13 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(strong_2_nodes, "Super fast, rock solid.");
			strong_2_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			text_14 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(li_2_nodes, " Compile-time static analysis ensures the browser does no more work than it needs to.");
			li_2_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			ul_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			text_15 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(div_2_nodes, "\n\n\t\t\t");

			a = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["g" /* claimElement */])(div_2_nodes, "A", { class: true, href: true }, false);
			var a_nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(a);

			text_16 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(a_nodes, "Learn Svelte");
			a_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			div_2_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			div_nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
			text_19 = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["h" /* claimText */])(nodes, "\n");
			layout._fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			encapsulateStyles(div);
			encapsulateStyles(div_1);
			encapsulateStyles(h1);
			div_1.className = "left";
			encapsulateStyles(div_2);
			encapsulateStyles(h2);
			encapsulateStyles(ul);
			encapsulateStyles(li);
			encapsulateStyles(strong);
			encapsulateStyles(li_1);
			encapsulateStyles(strong_1);
			encapsulateStyles(li_2);
			encapsulateStyles(strong_2);
			encapsulateStyles(a);
			a.className = "learn-svelte";
			a.href = "/guide";
			div_2.className = "right";
			div.className = "hero";
		},

		m: function mount(target, anchor) {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(title, document.head);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text, title);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["t" /* insertNode */])(text_2, target, anchor);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_3, layout._slotted.default);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(div, layout._slotted.default);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(div_1, div);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(h1, div_1);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_4, h1);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_6, div);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(div_2, div);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(h2, div_2);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_7, h2);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_8, div_2);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(ul, div_2);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(li, ul);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(strong, li);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_9, strong);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_10, li);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(li_1, ul);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(strong_1, li_1);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_11, strong_1);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_12, li_1);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(li_2, ul);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(strong_2, li_2);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_13, strong_2);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_14, li_2);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_15, div_2);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(a, div_2);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_16, a);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["b" /* appendNode */])(text_19, layout._slotted.default);
			layout._mount(target, anchor);
		},

		p: __WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["u" /* noop */],

		u: function unmount() {
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */])(title);
			Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */])(text_2);
			layout._unmount();
		},

		d: function destroy() {
			layout.destroy(false);
		}
	};
}

function Index(options) {
	Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["s" /* init */])(this, options);
	this.store = store_1();
	this._state = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["c" /* assign */])({}, options.data);

	if (!options.root) {
		this._oncreate = [];
		this._beforecreate = [];
		this._aftercreate = [];
	}

	this._fragment = create_main_fragment(this._state, this);

	if (options.target) {
		var nodes = Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["f" /* children */])(options.target);
		options.hydrate ? this._fragment.l(nodes) : this._fragment.c();
		nodes.forEach(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["o" /* detachNode */]);
		this._fragment.m(options.target, options.anchor || null);

		this._lock = true;
		Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["e" /* callAll */])(this._beforecreate);
		Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["e" /* callAll */])(this._oncreate);
		Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["e" /* callAll */])(this._aftercreate);
		this._lock = false;
	}
}

Object(__WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["c" /* assign */])(Index.prototype, __WEBPACK_IMPORTED_MODULE_0__Users_208311_Development_SVELTE_svelte_shared_js__["w" /* proto */]);
/* harmony default export */ __webpack_exports__["default"] = (Index);
__webpack_require__(168);


/***/ }),

/***/ 7:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return blankObject; });
/* unused harmony export destroy */
/* unused harmony export destroyDev */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return differs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return dispatchObservers; });
/* unused harmony export fire */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return get; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return observe; });
/* unused harmony export observeDev */
/* unused harmony export on */
/* unused harmony export onDev */
/* unused harmony export set */
/* unused harmony export _set */
/* unused harmony export setDev */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return callAll; });
/* unused harmony export _mount */
/* unused harmony export _unmount */
/* unused harmony export isPromise */
/* unused harmony export PENDING */
/* unused harmony export SUCCESS */
/* unused harmony export FAILURE */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return removeFromStore; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return proto; });
/* unused harmony export protoDev */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return appendNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return insertNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return detachNode; });
/* unused harmony export detachBetween */
/* unused harmony export detachBefore */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return detachAfter; });
/* unused harmony export reinsertBetween */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return reinsertChildren; });
/* unused harmony export reinsertAfter */
/* unused harmony export reinsertBefore */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return destroyEach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return createFragment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return createElement; });
/* unused harmony export createSvgElement */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return createText; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return createComment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return removeListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C", function() { return setAttribute; });
/* unused harmony export setXlinkAttribute */
/* unused harmony export getBindingGroupValue */
/* unused harmony export toNumber */
/* unused harmony export timeRangesToArray */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return children; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return claimElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return claimText; });
/* unused harmony export setInputType */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "D", function() { return setStyle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return selectOption; });
/* unused harmony export selectOptions */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return selectValue; });
/* unused harmony export selectMultipleValue */
/* unused harmony export linear */
/* unused harmony export generateRule */
/* unused harmony export hash */
/* unused harmony export wrapTransition */
/* unused harmony export transitionManager */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return noop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return assign; });
function noop() {}

function assign(target) {
	var k,
		source,
		i = 1,
		len = arguments.length;
	for (; i < len; i++) {
		source = arguments[i];
		for (k in source) target[k] = source[k];
	}

	return target;
}

function appendNode(node, target) {
	target.appendChild(node);
}

function insertNode(node, target, anchor) {
	target.insertBefore(node, anchor);
}

function detachNode(node) {
	node.parentNode.removeChild(node);
}

function detachBetween(before, after) {
	while (before.nextSibling && before.nextSibling !== after) {
		before.parentNode.removeChild(before.nextSibling);
	}
}

function detachBefore(after) {
	while (after.previousSibling) {
		after.parentNode.removeChild(after.previousSibling);
	}
}

function detachAfter(before) {
	while (before.nextSibling) {
		before.parentNode.removeChild(before.nextSibling);
	}
}

function reinsertBetween(before, after, target) {
	while (before.nextSibling && before.nextSibling !== after) {
		target.appendChild(before.parentNode.removeChild(before.nextSibling));
	}
}

function reinsertChildren(parent, target) {
	while (parent.firstChild) target.appendChild(parent.firstChild);
}

function reinsertAfter(before, target) {
	while (before.nextSibling) target.appendChild(before.nextSibling);
}

function reinsertBefore(after, target) {
	var parent = after.parentNode;
	while (parent.firstChild !== after) target.appendChild(parent.firstChild);
}

function destroyEach(iterations) {
	for (var i = 0; i < iterations.length; i += 1) {
		if (iterations[i]) iterations[i].d();
	}
}

function createFragment() {
	return document.createDocumentFragment();
}

function createElement(name) {
	return document.createElement(name);
}

function createSvgElement(name) {
	return document.createElementNS('http://www.w3.org/2000/svg', name);
}

function createText(data) {
	return document.createTextNode(data);
}

function createComment() {
	return document.createComment('');
}

function addListener(node, event, handler) {
	node.addEventListener(event, handler, false);
}

function removeListener(node, event, handler) {
	node.removeEventListener(event, handler, false);
}

function setAttribute(node, attribute, value) {
	node.setAttribute(attribute, value);
}

function setXlinkAttribute(node, attribute, value) {
	node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);
}

function getBindingGroupValue(group) {
	var value = [];
	for (var i = 0; i < group.length; i += 1) {
		if (group[i].checked) value.push(group[i].__value);
	}
	return value;
}

function toNumber(value) {
	return value === '' ? undefined : +value;
}

function timeRangesToArray(ranges) {
	var array = [];
	for (var i = 0; i < ranges.length; i += 1) {
		array.push({ start: ranges.start(i), end: ranges.end(i) });
	}
	return array;
}

function children (element) {
	return Array.from(element.childNodes);
}

function claimElement (nodes, name, attributes, svg) {
	for (var i = 0; i < nodes.length; i += 1) {
		var node = nodes[i];
		if (node.nodeName === name) {
			for (var j = 0; j < node.attributes.length; j += 1) {
				var attribute = node.attributes[j];
				if (!attributes[attribute.name]) node.removeAttribute(attribute.name);
			}
			return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes
		}
	}

	return svg ? createSvgElement(name) : createElement(name);
}

function claimText (nodes, data) {
	for (var i = 0; i < nodes.length; i += 1) {
		var node = nodes[i];
		if (node.nodeType === 3) {
			node.data = data;
			return nodes.splice(i, 1)[0];
		}
	}

	return createText(data);
}

function setInputType(input, type) {
	try {
		input.type = type;
	} catch (e) {}
}

function setStyle(node, key, value) {
	node.style.setProperty(key, value);
}

function selectOption(select, value) {
	for (var i = 0; i < select.options.length; i += 1) {
		var option = select.options[i];

		if (option.__value === value) {
			option.selected = true;
			return;
		}
	}
}

function selectOptions(select, value) {
	for (var i = 0; i < select.options.length; i += 1) {
		var option = select.options[i];
		option.selected = ~value.indexOf(option.__value);
	}
}

function selectValue(select) {
	var selectedOption = select.querySelector(':checked') || select.options[0];
	return selectedOption && selectedOption.__value;
}

function selectMultipleValue(select) {
	return [].map.call(select.querySelectorAll(':checked'), function(option) {
		return option.__value;
	});
}

function linear(t) {
	return t;
}

function generateRule(
	a,
	b,
	delta,
	duration,
	ease,
	fn
) {
	var keyframes = '{\n';

	for (var p = 0; p <= 1; p += 16.666 / duration) {
		var t = a + delta * ease(p);
		keyframes += p * 100 + '%{' + fn(t) + '}\n';
	}

	return keyframes + '100% {' + fn(b) + '}\n}';
}

// https://github.com/darkskyapp/string-hash/blob/master/index.js
function hash(str) {
	var hash = 5381;
	var i = str.length;

	while (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);
	return hash >>> 0;
}

function wrapTransition(component, node, fn, params, intro, outgroup) {
	var obj = fn(node, params);
	var duration = obj.duration || 300;
	var ease = obj.easing || linear;
	var cssText;

	// TODO share <style> tag between all transitions?
	if (obj.css && !transitionManager.stylesheet) {
		var style = createElement('style');
		document.head.appendChild(style);
		transitionManager.stylesheet = style.sheet;
	}

	if (intro) {
		if (obj.css && obj.delay) {
			cssText = node.style.cssText;
			node.style.cssText += obj.css(0);
		}

		if (obj.tick) obj.tick(0);
	}

	return {
		t: intro ? 0 : 1,
		running: false,
		program: null,
		pending: null,
		run: function(intro, callback) {
			var program = {
				start: window.performance.now() + (obj.delay || 0),
				intro: intro,
				callback: callback
			};

			if (obj.delay) {
				this.pending = program;
			} else {
				this.start(program);
			}

			if (!this.running) {
				this.running = true;
				transitionManager.add(this);
			}
		},
		start: function(program) {
			component.fire(program.intro ? 'intro.start' : 'outro.start', { node: node });

			program.a = this.t;
			program.b = program.intro ? 1 : 0;
			program.delta = program.b - program.a;
			program.duration = duration * Math.abs(program.b - program.a);
			program.end = program.start + program.duration;

			if (obj.css) {
				if (obj.delay) node.style.cssText = cssText;

				program.rule = generateRule(
					program.a,
					program.b,
					program.delta,
					program.duration,
					ease,
					obj.css
				);

				transitionManager.addRule(program.rule, program.name = '__svelte_' + hash(program.rule));

				node.style.animation = (node.style.animation || '')
					.split(', ')
					.filter(function(anim) {
						// when introing, discard old animations if there are any
						return anim && (program.delta < 0 || !/__svelte/.test(anim));
					})
					.concat(program.name + ' ' + duration + 'ms linear 1 forwards')
					.join(', ');
			}

			this.program = program;
			this.pending = null;
		},
		update: function(now) {
			var program = this.program;
			if (!program) return;

			var p = now - program.start;
			this.t = program.a + program.delta * ease(p / program.duration);
			if (obj.tick) obj.tick(this.t);
		},
		done: function() {
			var program = this.program;
			this.t = program.b;
			if (obj.tick) obj.tick(this.t);
			if (obj.css) transitionManager.deleteRule(node, program.name);
			program.callback();
			program = null;
			this.running = !!this.pending;
		},
		abort: function() {
			if (obj.tick) obj.tick(1);
			if (obj.css) transitionManager.deleteRule(node, this.program.name);
			this.program = this.pending = null;
			this.running = false;
		}
	};
}

var transitionManager = {
	running: false,
	transitions: [],
	bound: null,
	stylesheet: null,
	activeRules: {},

	add: function(transition) {
		this.transitions.push(transition);

		if (!this.running) {
			this.running = true;
			requestAnimationFrame(this.bound || (this.bound = this.next.bind(this)));
		}
	},

	addRule: function(rule, name) {
		if (!this.activeRules[name]) {
			this.activeRules[name] = true;
			this.stylesheet.insertRule('@keyframes ' + name + ' ' + rule, this.stylesheet.cssRules.length);
		}
	},

	next: function() {
		this.running = false;

		var now = window.performance.now();
		var i = this.transitions.length;

		while (i--) {
			var transition = this.transitions[i];

			if (transition.program && now >= transition.program.end) {
				transition.done();
			}

			if (transition.pending && now >= transition.pending.start) {
				transition.start(transition.pending);
			}

			if (transition.running) {
				transition.update(now);
				this.running = true;
			} else if (!transition.pending) {
				this.transitions.splice(i, 1);
			}
		}

		if (this.running) {
			requestAnimationFrame(this.bound);
		} else if (this.stylesheet) {
			var i = this.stylesheet.cssRules.length;
			while (i--) this.stylesheet.deleteRule(i);
			this.activeRules = {};
		}
	},

	deleteRule: function(node, name) {
		node.style.animation = node.style.animation
			.split(', ')
			.filter(function(anim) {
				return anim.slice(0, name.length) !== name;
			})
			.join(', ');
	}
};

function blankObject() {
	return Object.create(null);
}

function destroy(detach) {
	this.destroy = noop;
	this.fire('destroy');
	this.set = this.get = noop;

	if (detach !== false) this._fragment.u();
	this._fragment.d();
	this._fragment = this._state = null;
}

function destroyDev(detach) {
	destroy.call(this, detach);
	this.destroy = function() {
		console.warn('Component was already destroyed');
	};
}

function differs(a, b) {
	return a !== b || ((a && typeof a === 'object') || typeof a === 'function');
}

function dispatchObservers(component, group, changed, newState, oldState) {
	for (var key in group) {
		if (!changed[key]) continue;

		var newValue = newState[key];
		var oldValue = oldState[key];

		var callbacks = group[key];
		if (!callbacks) continue;

		for (var i = 0; i < callbacks.length; i += 1) {
			var callback = callbacks[i];
			if (callback.__calling) continue;

			callback.__calling = true;
			callback.call(component, newValue, oldValue);
			callback.__calling = false;
		}
	}
}

function fire(eventName, data) {
	var handlers =
		eventName in this._handlers && this._handlers[eventName].slice();
	if (!handlers) return;

	for (var i = 0; i < handlers.length; i += 1) {
		handlers[i].call(this, data);
	}
}

function get(key) {
	return key ? this._state[key] : this._state;
}

function init(component, options) {
	component._observers = { pre: blankObject(), post: blankObject() };
	component._handlers = blankObject();
	component._bind = options._bind;

	component.options = options;
	component.root = options.root || component;
	component.store = component.root.store || options.store;
}

function observe(key, callback, options) {
	var group = options && options.defer
		? this._observers.post
		: this._observers.pre;

	(group[key] || (group[key] = [])).push(callback);

	if (!options || options.init !== false) {
		callback.__calling = true;
		callback.call(this, this._state[key]);
		callback.__calling = false;
	}

	return {
		cancel: function() {
			var index = group[key].indexOf(callback);
			if (~index) group[key].splice(index, 1);
		}
	};
}

function observeDev(key, callback, options) {
	var c = (key = '' + key).search(/[^\w]/);
	if (c > -1) {
		var message =
			'The first argument to component.observe(...) must be the name of a top-level property';
		if (c > 0)
			message += ", i.e. '" + key.slice(0, c) + "' rather than '" + key + "'";

		throw new Error(message);
	}

	return observe.call(this, key, callback, options);
}

function on(eventName, handler) {
	if (eventName === 'teardown') return this.on('destroy', handler);

	var handlers = this._handlers[eventName] || (this._handlers[eventName] = []);
	handlers.push(handler);

	return {
		cancel: function() {
			var index = handlers.indexOf(handler);
			if (~index) handlers.splice(index, 1);
		}
	};
}

function onDev(eventName, handler) {
	if (eventName === 'teardown') {
		console.warn(
			"Use component.on('destroy', ...) instead of component.on('teardown', ...) which has been deprecated and will be unsupported in Svelte 2"
		);
		return this.on('destroy', handler);
	}

	return on.call(this, eventName, handler);
}

function set(newState) {
	this._set(assign({}, newState));
	if (this.root._lock) return;
	this.root._lock = true;
	callAll(this.root._beforecreate);
	callAll(this.root._oncreate);
	callAll(this.root._aftercreate);
	this.root._lock = false;
}

function _set(newState) {
	var oldState = this._state,
		changed = {},
		dirty = false;

	for (var key in newState) {
		if (differs(newState[key], oldState[key])) changed[key] = dirty = true;
	}
	if (!dirty) return;

	this._state = assign({}, oldState, newState);
	this._recompute(changed, this._state);
	if (this._bind) this._bind(changed, this._state);

	if (this._fragment) {
		dispatchObservers(this, this._observers.pre, changed, this._state, oldState);
		this._fragment.p(changed, this._state);
		dispatchObservers(this, this._observers.post, changed, this._state, oldState);
	}
}

function setDev(newState) {
	if (typeof newState !== 'object') {
		throw new Error(
			this._debugName + '.set was called without an object of data key-values to update.'
		);
	}

	this._checkReadOnly(newState);
	set.call(this, newState);
}

function callAll(fns) {
	while (fns && fns.length) fns.pop()();
}

function _mount(target, anchor) {
	this._fragment.m(target, anchor);
}

function _unmount() {
	if (this._fragment) this._fragment.u();
}

function isPromise(value) {
	return value && typeof value.then === 'function';
}

var PENDING = {};
var SUCCESS = {};
var FAILURE = {};

function removeFromStore() {
	this.store._remove(this);
}

var proto = {
	destroy: destroy,
	get: get,
	fire: fire,
	observe: observe,
	on: on,
	set: set,
	teardown: destroy,
	_recompute: noop,
	_set: _set,
	_mount: _mount,
	_unmount: _unmount
};

var protoDev = {
	destroy: destroyDev,
	get: get,
	fire: fire,
	observe: observeDev,
	on: onDev,
	set: setDev,
	teardown: destroyDev,
	_recompute: noop,
	_set: _set,
	_mount: _mount,
	_unmount: _unmount
};




/***/ }),

/***/ 8:
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),

/***/ 9:
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getElement = (function (fn) {
	var memo = {};

	return function(selector) {
		if (typeof memo[selector] === "undefined") {
			var styleTarget = fn.call(this, selector);
			// Special case to return head of iframe instead of iframe itself
			if (styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[selector] = styleTarget;
		}
		return memo[selector]
	};
})(function (target) {
	return document.querySelector(target)
});

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(18);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertInto + " " + options.insertAt.before);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	options.attrs.type = "text/css";

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,